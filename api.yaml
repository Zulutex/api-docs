openapi: 3.0.3
info:
  title: Zulutex
  version: 'v1.0.0'
  x-logo:
    url: https://github.com/Zulutex/api-docs/raw/main/logo.jpg
  description: |
    Zulutex is a cryptocurrency payment API.

    It is designed with the intent to allow you to integrate multiple coin payments in your service with
    the least effort possible.

    For start, create your first application using [ZulutexBot](https://t.me/ZulutexBot). After create your application, you can get api-key from bot.

    The only thing required is that you implement the logic on your server to create invoices.
servers:
  - url: https://api.zulutex.com
    description: Production
  - url: https://api-dev.zulutex.com
    description: Development

components:
  schemas:
    RestUnauthorizedError:
      type: object
      description: UnauthorizedError
      properties:
        status:
          description: Request Status
          type: string
          example: ERROR
          enum:
            - ERROR
        errorMessage:
          description: Humanreadable error message
          type: string
          example: "Unauthorized"
    RestNotFoundError:
      type: object
      description: NotFoundError
      properties:
        status:
          description: Request Status
          type: string
          example: ERROR
          enum:
            - ERROR
        errorMessage:
          description: Humanreadable error message
          type: string
          example: "NotFound"

    Application:
      type: object
      description: Application Info
      properties:
        id:
          description: Application unique id
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          description: Application name
          type: string
          example: My App

    RestApplicationResult:
      type: object
      description: Rest Application Result
      properties:
        status:
          description: Request Status
          type: string
          example: OK
          enum:
            - OK
            - ERROR
        data:
          $ref: "#/components/schemas/Application"

    RestCreateInvoice:
      type: object
      description: Rest Invoice Creation Schema
      properties:
        type:
          description: Invoice type, other currency amounts calculated automatically based on USDT price specified in amount field, currently only this type of invoice can be create
          type: string
          example: USDT_BASE
          default: USDT_BASE
          required: false
        allowedAssets:
          description: Allowed assets for user to select and pay this invoice
          type: array
          example: ["TRX", "USDT"]
          items:
            type: string
            enum:
              - USDT
              - TRX
        amount:
          description: |
            Amount of the invoice, when invoice type is USDT_BASE, this amount is price in USDT, other allowed currencies converted automatically
            
            *NOTE:* type should be *string* with maximum of 6 precision number
          type: string
          example: "100.0251"
        ttl:
          description: |
            If set, invoice will be expired after ttl ends
          type: number
          format: milliseconds
          example: 86400000
          required: false
          default: null

    Invoice:
      type: object
      description: Invoice
      properties:
        id:
          description: Invoice unique id
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
        type:
          description: Invoice type, other currency amounts calculated automatically based on USDT price specified in amount field, currently only this type of invoice can be create
          type: string
          example: USDT_BASE
          default: USDT_BASE
        status:
          description: |
            Invoice current status,
            
            
            *SUCCEED*: user successfully pay the invoice and the transaction completed
            
            *PENDING*: invoice is pending for user to pay it
            
            *EXPIRED*: invoice time expired, only when ttl used when create the invoice
            
            *CANCELED*: invoice canceled by cancel api, user can not pay it anymore
          type: string
          example: PENDING
          enum:
            - SUCCEED
            - PENDING
            - EXPIRED
            - CANCELED
        allowedAssets:
          description: Allowed assets for user to select and pay this invoice
          type: array
          example: ["TRX", "USDT"]
          items:
            type: string
            enum:
              - USDT
              - TRX
        amount:
          description: |
            Amount of the invoice, when invoice type is USDT_BASE, this amount is price in USDT, other allowed currencies converted automatically
            
            *NOTE:* type should be *string* with maximum of 6 precision number
          type: string
          example: "100.0251"
        createdAt:
          description: Invoice creation timestamp in milliseconds
          type: number
          example: 1680434249959
        expiredAt:
          description: If invoice expired, show expiration timestamp in milliseconds
          type: number
          example: 1680434249959
        paidAt:
          description: If invoice paid, show payment timestamp in milliseconds
          type: number
          example: 1680434249959
        canceledAt:
          description: If invoice canceled, show cancellation timestamp in
          type: number
          example: 1680434249959
        paymentTelegramURL:
          description: URL that should redirect user to it
          type: string
          example: https://t.me/ZulutexBot?start=pay-123e4567-e89b-12d3-a456-426614174000

    RestSingleInvoiceResult:
      type: object
      description: Rest Invoice Result
      properties:
        status:
          description: Request Status
          type: string
          example: OK
          enum:
            - OK
            - ERROR
        data:
          $ref: "#/components/schemas/Invoice"

    RestInvoicesResult:
      type: object
      description: Rest Invoices Result
      properties:
        status:
          description: Request Status
          type: string
          example: OK
          enum:
            - OK
            - ERROR
        data:
          type: array
          items:
            $ref: "#/components/schemas/Invoice"

  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}

  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Authorization
      description: |
        You should send `Authorization` header with your api-key for all requests
  links: {}
  callbacks: {}
security:
  - apiKey: []


tags:
  - name: Authorization
  - name: Payment
    description: |
      To integrate your application with Zulutex, When use want to pay for something, You should create an invoice in Zulutex, On success a invoice object return that have paymentURL, You must send paymentURL to use to accept invoice. 

paths:
  /v1/getMe:
    summary: Application API
    get:
      tags:
        - Authorization
      operationId: v1getme
      summary: Get Application Info
      description: |
        Use this method to test your app's authentication token. Requires no parameters. On success, return basic application information.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestApplicationResult'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestUnauthorizedError'

  /v1/invoice/{id}:
    summary: Invoice API
    get:
      tags:
        - Payment
      operationId: v1getinvoicebyid
      summary: Get specific Invoice
      description: |
        Use this method to get specific invoice information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestSingleInvoiceResult'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestUnauthorizedError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestNotFoundError'

  /v1/invoice:
    summary: Invoice API
    get:
      tags:
        - Payment
      operationId: v1getinvoices
      summary: Get Invoices
      description: |
        Use this method to get last invoices of your application, maximum limit is 100
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: number
            format: int
            default: 20
            maximum: 100
        - name: onlySucceeded
          description: If true, only returns succeeded invoices
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestInvoicesResult'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestUnauthorizedError'

    post:
      tags:
        - Payment
      operationId: v1postinvoice
      summary: Create New Invoice
      description: |
        Use this method to create new invoice. On success, returns invoice information than contain paymentUrl that your should send it to user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestCreateInvoice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestSingleInvoiceResult'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestUnauthorizedError'
